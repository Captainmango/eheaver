---
import "../../scss/main.scss"
const {simulatedWidth, topSpacing, componentRoute} = Astro.props
---

<div 
    class="responsive-wrapper pico"
    style={`--sim-width: ${simulatedWidth ?? '100vw'} --top-spacing: ${topSpacing ?? 0};`}
>
    <iframe
        id="auto-sizing-iframe"
        class="inner-wrapper"
        src=`${componentRoute}`
    ></iframe>
    <slot />
</div>

<style is:global>
    .responsive-wrapper {
        width: var(--sim-width);
        min-width: var(--sim-width);
        max-width: var(--sim-width);
        margin-left: auto;
        margin-right: auto;
        width: 100%;
        height: 100vh;
        margin: 0;
        padding: 0;
        margin-top: var(--top-spacing);
    }

    .inner-wrapper {
        width: 100%;
        border: none;
        margin: 0;
        padding: 0;
        display: block;
    }
</style>

<script type="module">
    const wrapper = document.querySelector(".responsive-wrapper")

    if (!wrapper.style.getPropertyValue("--sim-width") || wrapper.style.getPropertyValue("--sim-width") === "100vw") {
        const updateWidth = () => wrapper.style.setProperty("--sim-width", "90%")
        updateWidth()
        window.addEventListener("resize", updateWidth)
    }

    function resizeIframeToContent(iframe) {
        iframe.style.height = iframe.contentWindow.document.body.scrollHeight + 50 + 'px';
    }

    const iframe = document.getElementById('auto-sizing-iframe');

    iframe.addEventListener('load', () => {
        resizeIframeToContent(iframe);

        const observer = new ResizeObserver(() => resizeIframeToContent(iframe));
        observer.observe(iframe.contentWindow.document.body);
    });
</script>