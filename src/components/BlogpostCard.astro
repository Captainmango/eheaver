---
import { Image } from "astro:assets";
import FormattedDate from "./FormattedDate.astro";
import fallbackImage from "../assets/blogfallback.png"
import { getImage } from "astro/assets";

interface Props {
    mediumLink: string
    blogImage: string | undefined
    title: string
    publishDate: Date
}

const {
    mediumLink,
    blogImage,
    title,
    publishDate
} = Astro.props

---
<article class="card">
    <div class="card-image">
        {blogImage && (
            <Image inferSize={true} src={blogImage} alt="Hero image for blogpost" />
        )}
        {!blogImage && (<img src= {fallbackImage.src } />)}
    </div>
    <hgroup>
        <h5 class="title">{title}</h4>
        <p class="date">
            <FormattedDate date={publishDate} />
        </p>
    </hgroup>
    <a href={mediumLink} style="width: 90%;">Read on Medium</a>
</article>


<style lang="scss">
    @use "sass:map";
    @import "@picocss/pico/scss/settings";

    .card {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        width: clamp(150px, 390px, 450px);
        row-gap: 0.5em;

        & hgroup {
            & h5 {
                font-size: 1em;
            }
            & p {
                font-size: 0.8em;
            }
            width: 90%;
            padding: 0;
            margin: 0;
        }
    
        & .card-image {
            width: 100%;
            height: 0;
            padding-bottom: 75%;
            position: relative;
            overflow: hidden;

            @if map.get($breakpoints, "md") {
                @media (max-width: map.get(map.get($breakpoints, "md"), "breakpoint")) {
                    display: none;
                }
            }

            & img {
                padding: 8px;
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                object-fit: contain;
                object-position: center;
            }
        }

        @if map.get($breakpoints, "md") {
            @media (min-width: map.get(map.get($breakpoints, "md"), "breakpoint")) {
                grid-template-columns: repeat(auto-fit, minmax(0%, 1fr));
            }
        }
    }
</style>

<script type="module">
    function setfallback() {

    }
</script>